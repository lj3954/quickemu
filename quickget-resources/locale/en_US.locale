#!/bin/bash

# In order to add a new language, write appropriate translations for each message here.
# Make use of the same variables, and use examples to verify.

# Name the file according to the language+country code. i.e. "en_US.locale", "zh_CN.locale", "es_ES.locale"
# For most languages (country not being particularly relevant), use just the language code, followed by "_*". i.e. "de_*.locale", "fr_*.locale"
function locale.downloading_message() {
    echo "Downloading ${PRETTY_NAME} ${RELEASE} ${EDITION}"
}

function locale.image_verification() {
    echo -n "Checking ${LAST_DOWNLOADED} with ${HASH_ALGO}... "
}

function locale.failed_image_verification() {
    echo "ERROR! ${LAST_DOWNLOADED} doesn't match ${HASH}. Try running 'quickget' again."
}

function locale.successful_image_verification() {
    echo "Good!"
}

function locale.vm_dir_failure() {
    echo "ERROR! Unable to create directory ${VM_PATH}"
}

function locale.failed_download() {
    echo "ERROR! Failed to download ${URL} with ${DOWNLOADER}. Try running 'quickget' again."
}

function locale.make_conf() {
    echo "Making ${CONF_FILE}"
}

function locale.execute_permissions() {
    echo "Giving user execute permissions on ${CONF_FILE},"
}

function locale.root_failure() {
    echo "ERROR! Quickget cannot be run as root."
}

function locale.cache_dir_failure() {
    echo "ERROR! Failed to create cache directory at ${HOME}/.cache/quickemu"
}

function locale.no_os() {
    echo "ERROR! You must specify an operating system."
    echo -n " - Operating Systems: "
}

function locale.unsupported_flag() {
    echo -n "Unsupported flag"
}

function locale.invalid_params() {
    echo "Error. Invalid parameters."
}

function locale.unsupported_os() {
    echo -e "ERROR! ${OS} is not a supported OS.\n"
}

function locale.no_urls() {
    echo "ERROR! Received no URLs from the ${PRETTY_NAME} plugin. Try running 'quickget' again."
}

function locale.start_vm() {
    echo -e "\nTo start your ${PRETTY_NAME} virtual machine run:\n    quickemu --vm ${CONF_FILE}\n"
}

function locale.usage() {
    echo ""
}